@inject IPlayerService PlayerService

<div class="d-flex justify-content-center">
    <div class="position-relative bg-dodgerblue rounded-3">
        <div class="d-flex justify-content-center">
            @for (int i = 0; i < 4; i++)
            {
                var players = PlayerService.Players;
                PlayerModel player = players?.FirstOrDefault(p => p.Position == i);
                <div class="m-2 position-relative" @onclick="() => PlayerService.RemovePlayer(player)">
                    <div class="text-primary">
                        <FontAwesome IconName="square" Size="x-1"></FontAwesome>
                    </div>
                    <div class="position-absolute top-50 start-50 translate-middle">
                        @if (player is not null)
                        {
                            <FontAwesome IconName="@player.Icon" Size="x-3"></FontAwesome>
                        }
                        else
                        {
                            <strong class="opacity-50">P@(i + 1)</strong>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div class="d-flex justify-content-center m-3">
    <div class="bg-dodgerblue rounded-3 p-2">
        <div class="d-flex justify-content-between m-2">
            <PlayerIcon IconName="hippo"></PlayerIcon>
            <PlayerIcon IconName="otter"></PlayerIcon>
            <PlayerIcon IconName="kiwi-bird"></PlayerIcon>
        </div>
        <div class="d-flex justify-content-between m-2">
            <PlayerIcon IconName="spider"></PlayerIcon>
            <PlayerIcon IconName="shrimp"></PlayerIcon>
            <PlayerIcon IconName="mosquito"></PlayerIcon>
        </div>
        <div class="d-flex justify-content-between m-2">
            <PlayerIcon IconName="horse"></PlayerIcon>
            <PlayerIcon IconName="frog"></PlayerIcon>
            <PlayerIcon IconName="fish-fins"></PlayerIcon>
        </div>
        <div class="d-flex justify-content-between m-2">
            <PlayerIcon IconName="dog"></PlayerIcon>
            <PlayerIcon IconName="crow"></PlayerIcon>
            <PlayerIcon IconName="cat"></PlayerIcon>
        </div>
    </div>
</div>

@code {
    protected override void OnInitialized()
    {
        PlayerService.OnPlayersChanged += StateHasChanged;
    }

    public void Dispose()
    {
        PlayerService.OnPlayersChanged -= StateHasChanged;
    }
}