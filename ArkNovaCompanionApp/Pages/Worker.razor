@inject IWorkerService WorkerService

<div class="@(Model.IsActive ? "text-dark" : "text-primary")" >
	@if (Model.IsUsed)
	{
		<div class="text-light m-2" @onclick="() => WorkerService.ToggleWorker(Model)" @onclick:stopPropagation="@Model.IsActive">
			<FontAwesome IconName="user" Size="x-2"></FontAwesome>
		</div>
	}
	else
	{
		<div class="m-3" @onclick="() => WorkerService.ToggleWorker(Model)" @onclick:stopPropagation="@Model.IsActive">
			<FontAwesome IconName="user" Size="x-3"></FontAwesome>
		</div>
	}
</div>

@code {
	[Parameter]
	public WorkerModel Model { get; set; }

	protected override void OnInitialized()
	{
		WorkerService.OnWorkersChanged += StateHasChanged;
	}

	public void Dispose()
	{
		WorkerService.OnWorkersChanged -= StateHasChanged;
	}
}