@inject ILocalStorageService StorageService
@inject NavigationManager Navigation

<div class="row mx-2">
    <div class="col-10">
        <div class="row">
            <div class="square-2 rounded-2 bg-dodgerblue mx-1" @onclick='() => SelectedEvent.InvokeAsync("actions")'>
                <div class="centre">
                    <FontAwesome IconName="house" Size="3"></FontAwesome>
                </div>
            </div>
            <div class="square-2 rounded-2 bg-dodgerblue mx-1" @onclick='() => SelectedEvent.InvokeAsync("buildings")'>
                <i class="bi bi-hexagon-fill centre fs-3"></i>
            </div>
            <div class="square-2 rounded-2 bg-dodgerblue mx-1" @onclick='() => SelectedEvent.InvokeAsync("break")'>
                <div class="centre">
                    <FontAwesome IconName="mug-hot" Size="3"></FontAwesome>
                </div>
            </div>
            <div class="square-2 rounded-2 bg-dodgerblue mx-1" @onclick='() => SelectedEvent.InvokeAsync("money")'>
                <div class="centre">
                    <FontAwesome IconName="coins" Size="3"></FontAwesome>
                </div>
            </div>
            <div class="square-2 rounded-2 bg-dodgerblue mx-1" @onclick='() => SelectedEvent.InvokeAsync("workers")'>
                <div class="centre">
                    <FontAwesome IconName="users" Size="3"></FontAwesome>
                </div>
            </div>
            <div class="square-2 rounded-2 bg-dodgerblue mx-1" @onclick='() => SelectedEvent.InvokeAsync("scores")'>
                <div class="centre">
                    <FontAwesome IconName="star" Size="3"></FontAwesome>
                </div>
            </div>
        </div>
    </div>
    <div class="col-2 justify-content-end">
        <div class="square-2 rounded-2 bg-danger mx-1" @onclick="() => OnStorageClear()">
            <div class="centre">
                <FontAwesome IconName="trash-can" Size="3"></FontAwesome>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public EventCallback<string> SelectedEvent { get; set; }

    private async Task OnStorageClear()
    {
        await StorageService.ClearAsync();
        Navigation.NavigateTo(Navigation.Uri, true);
    }
}
