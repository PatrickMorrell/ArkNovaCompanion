@inject IMenuService MenuService
@inject ILocalStorageService StorageService
@inject NavigationManager Navigation

<div class="d-flex centre m-2">
	@if (MenuService.Menu is not null)
	{
		@foreach (MenuItemModel item in MenuService.Menu)
		{
			<MenuItem Model=item></MenuItem>
		}
	}
	<button class="btn btn-danger square-2 rounded-2 mx-1" @onclick="async () => await modal.Open()">
		<div class="centre">
			<FontAwesome IconName="trash-can" Size="3"></FontAwesome>
		</div>
	</button>
</div>

<Modal Id="clearStorageModal" @ref="modal">
	<Title>Reset?</Title>
	<Body>
		This action will clear everything
	</Body>
	<Footer>
		<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
		<button type="button" class="btn btn-danger" data-bs-dismiss="modal" @onclick="() => OnStorageClear()">Yes</button>
	</Footer>
</Modal>

@code {
	private Modal modal { get; set; }

	protected override void OnInitialized()
	{
		MenuService.OnMenuChanged += StateHasChanged;
	}

	public void Dispose()
	{
		MenuService.OnMenuChanged -= StateHasChanged;
	}

	private async Task OnStorageClear()
	{
		await StorageService.ClearAsync();
		Navigation.NavigateTo(Navigation.Uri, true);
	}
}
