@inject IMoneyService MoneyService

<strong class="d-flex centre rounded-4 bg-warning m-2 fs-1">@MoneyService.GetMoneyTotal()</strong>

@if (MoneyService.Coins is not null)
{
    foreach (var coin in MoneyService.Coins)
    {
        <div class="row position-relative">
            <div class="col-3">
                <div class="square-fifth rounded-3 bg-dodgerblue m-2" @onclick="() => MoneyService.AddMoney(coin)">
                    <div class="d-flex flex-column centre text-dark">
                        <div style="z-index:1;">
                            <FontAwesome IconName="hand-holding" Size="x-1"></FontAwesome>
                        </div>
                        <div class="position-absolute square-1 rounded-4 border border-4 border-dark">
                            <strong class="container centre fs-2">@coin.Value</strong>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col position-relative">

                @for (int i = 1; i <= coin.Amount; i++)
                {
                    @if (i == 1)
                    {
                        <div class="position-absolute square-1 rounded-4 bg-warning border border-2 border-dark m-2"
                             style="left: @(i)rem; top: 10%;" @onclick="() => MoneyService.RemoveMoney(coin)">
                            <strong class="container centre no-select fs-2">@coin.Value</strong>
                        </div>
                    }
                    else
                    {
                        <div class="position-absolute square-1 rounded-4 bg-warning border border-2 border-dark m-2"
                             style="left: @(i)rem; top: 10%; z-index: -@i;">
                        </div>
                    }
                }
            </div>
        </div>
    }
}

@code {
    protected override void OnInitialized()
    {
        MoneyService.OnMoneyChanged += StateHasChanged;
    }

    public void Dispose()
    {
        MoneyService.OnMoneyChanged -= StateHasChanged;
    }
}
