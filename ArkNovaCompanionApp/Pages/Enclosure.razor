@{
	double ProportionalScale = IsProportional ? Scale * Math.Pow(1.2, -Size) : Scale;
}

<div style="font-size: @(30*ProportionalScale)px;">
	@switch (Size)
	{
		case 1:
			<div class="d-flex">
				<i class="bi bi-hexagon-fill"></i>
			</div>
			break;
		case 2:
			<div class="d-flex" style="margin-left: @(15*ProportionalScale)px;">
				<i class="bi bi-hexagon-fill"></i>
			</div>
			<div class="d-flex" style="margin-top: -@(20*ProportionalScale)px;">
				<i class="bi bi-hexagon-fill"></i>
			</div>
			break;
		case 3:
			<div class="d-flex" style="margin-left: @(15*ProportionalScale)px;">
				<i class="bi bi-hexagon-fill"></i>
			</div>
			<div class="d-flex" style="margin-top: -@(20*ProportionalScale)px;">
				<i class="bi bi-hexagon-fill"></i>
				<i class="bi bi-hexagon-fill" style="margin-left: -@(ProportionalScale)px;"></i>
			</div>
			break;
		case 4:
			<div class="d-flex" style="margin-left: @(15*ProportionalScale)px;">
				<i class="bi bi-hexagon-fill"></i>
				<i class="bi bi-hexagon-fill" style="margin-left: -@(ProportionalScale)px;"></i>
			</div>
			<div class="d-flex" style="margin-top: -@(20*ProportionalScale)px;">
				<i class="bi bi-hexagon-fill"></i>
				<i class="bi bi-hexagon-fill" style="margin-left: -@(ProportionalScale)px;"></i>
			</div>
			break;
		default:
			<div class="d-flex" style="margin-left: @(15*ProportionalScale)px;">
				<i class="bi bi-hexagon-fill"></i>
				<i class="bi bi-hexagon-fill" style="margin-left: -@(ProportionalScale)px;"></i>
			</div>
			<div class="d-flex" style="margin-top: -@(20*ProportionalScale)px;">
				<i class="bi bi-hexagon-fill"></i>
				<i class="bi bi-hexagon-fill" style="margin-left: -@(ProportionalScale)px;"></i>
			</div>
			<div class="d-flex" style="margin-top: -@(20*ProportionalScale)px;">
				<i class="bi bi-hexagon-fill" style="margin-left: @(15*ProportionalScale)px;"></i>
			</div>
			break;
	}
</div>

@code {
	[Parameter]
	public int Size { get; set; }

	[Parameter]
	public double Scale { get; set; }

	[Parameter]
	public bool IsProportional { get; set; }

}