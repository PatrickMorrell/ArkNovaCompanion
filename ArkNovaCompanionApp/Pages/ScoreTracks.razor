<h3>Score Tracks</h3>

<div>
    <button class="btn btn-danger" @onclick="() => UpdateConservation(-1)">
        <FontAwesome IconName="@conservationIcon"></FontAwesome>
        <FontAwesome IconName="minus"></FontAwesome>
    </button>

    <button class="btn btn-primary" @onclick="() => UpdateConservation(1)">
        <FontAwesome IconName="@conservationIcon"></FontAwesome>
        <FontAwesome IconName="plus"></FontAwesome>
    </button>

    <p>Conservation: @conservation</p>
</div>
<div>
    <button class="btn btn-danger" @onclick="() => UpdateAppeal(-1)">
        <FontAwesome IconName="@appealIcon"></FontAwesome>
        <FontAwesome IconName="minus"></FontAwesome>
    </button>

    <button class="btn btn-primary" @onclick="() => UpdateAppeal(1)">
        <FontAwesome IconName="@appealIcon"></FontAwesome>
        <FontAwesome IconName="plus"></FontAwesome>
    </button>

    <p>Appeal: @appeal</p>
</div>
<div>
    <button class="btn btn-danger" @onclick="() => UpdateReputation(-1)">
        <FontAwesome IconName="@reputationIcon"></FontAwesome>
        <FontAwesome IconName="minus"></FontAwesome>
    </button>

    <button class="btn btn-primary" @onclick="() => UpdateReputation(1)">
        <FontAwesome IconName="@reputationIcon"></FontAwesome>
        <FontAwesome IconName="plus"></FontAwesome>
    </button>

    <p>Reputation: @reputation</p>
</div>

<p>Total score: @CalculateTotalScore()</p>

@code {
    int conservation = 0;
    int appeal = 0;
    int reputation = 1;

    string conservationIcon = "shield-heart";
    string appealIcon = "ticket";
    string reputationIcon = "graduation-cap";

    private void UpdateConservation(int points)
    {
        int updatedConservation = conservation + points;
        if (updatedConservation >= 0 && updatedConservation <= 41)
        {
            conservation = updatedConservation;
        }
    }

    private void UpdateAppeal(int points)
    {
        int updatedAppeal = appeal + points;
        if (updatedAppeal >= 0 && updatedAppeal <= 113)
        {
            appeal = updatedAppeal;
        }
    }

    private void UpdateReputation(int points)
    {
        int updatedReputation = reputation + points;
        if (updatedReputation >= 1 && updatedReputation <= 15)
        {
            reputation = updatedReputation;
        }
    }

    private int CalculateTotalScore()
    {
        int concervationScore = 0;
        if (conservation <= 10)
        {
            concervationScore = 2 * (conservation - 7);
        }
        else
        {
            concervationScore = 3 * (conservation - 8);
        }
        return concervationScore + appeal;
    }
}
