@inject IBuildingService BuildingService

@if (BuildingService.Buildings is not null)
{
	foreach (bool isStandard in new bool[] { true, false })
	{
		<div class="d-flex">
			@foreach (BuildingModel building in BuildingService.Buildings.Where(b => b.IsStandard == isStandard).OrderBy(b => b.Order))
			{
				<div class="@(building.IsOccupied ? "text-primary" : "text-dark") mx-2" @onclick="() => BuildingService.ToggleOccupied(building)">
					<Building Model=building></Building>
				</div>
			}
		</div>
	}
}

@code {
	protected override async Task OnInitializedAsync()
	{
		BuildingService.OnBuildingsChanged += StateHasChanged;
		await BuildingService.GetStoredBuildings();
		StateHasChanged();
	}

	private void ToggleSelect(BuildingTypeModel building)
	{
		building.IsSelected = !building.IsSelected;
	}

	public void Dispose()
	{
		BuildingService.OnBuildingsChanged -= StateHasChanged;
	}
}
